syntax = "proto3";

package server.account.admin.account.v1;

import "google/api/annotations.proto";

option go_package = "api/server/account/admin/account/v1;adminv1";

// Account admin service
// Open to the server cluster
// Provide gRPC interfaceseditorconfig
service AccountAdminService {
	rpc AccountList (AccountListRequest) returns (AccountListResponse) {
		option (google.api.http) = {
			get: "/admin/account/list"
		};
	};

	rpc GetById (GetByIdRequest) returns (GetByIdResponse) {
		option (google.api.http) = {
			get: "/admin/account/id"
		};
	};
}

message GetByIdRequest {
	int64 id = 1;
}

message GetByIdResponse {
	int32 code = 1;
	string message = 2;

	AccountProto account = 3;
}

message AccountListRequest {
	int32 page = 1;
	int32 page_size = 2;

	AccountListCondition condition = 3;
}

message AccountListCondition {
	string name = 1;
	string apple_id = 2;
	string google_id = 3;
}

message AccountListResponse {
	int32 code = 1;
	string message = 2;

	repeated AccountProto accounts = 3;
	uint32 total = 4;
}

message AccountProto {
	int64 id = 1;
	string id_str = 2;
	string apple_id = 3;
	string google_id = 4;
	string name = 5;
	string register_ip = 6;
	string last_login_ip = 7;
	int32 channel = 8;
	int64 created_at = 9;
}

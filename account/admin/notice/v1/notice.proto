syntax = "proto3";

package account.admin.notice.v1;

import "google/api/annotations.proto";

option go_package = "api/server/account/admin/notice/v1;adminv1";

// Notice admin service
// Open to the server cluster
// Provide gRPC interfaces
service NoticeAdmin {
	// Query notice page list
	rpc GetNoticeList (GetNoticeListRequest) returns (GetNoticeListResponse) {
		option (google.api.http) = {
			get: "/admin/notice/list"
		};
	};
	// Query notice by id
	rpc GetNoticeById (GetNoticeByIdRequest) returns (GetNoticeByIdResponse) {
		option (google.api.http) = {
			get: "/admin/notice/id"
		};
	};

	// Create notice
	rpc CreateNotice (CreateNoticeRequest) returns (CreateNoticeResponse) {
		option (google.api.http) = {
			post: "/admin/notice/create"
			body: "*"
		};
	};

	// Update notice
	rpc UpdateNotice (UpdateNoticeRequest) returns (UpdateNoticeResponse) {
		option (google.api.http) = {
			post: "/admin/notice/update"
			body: "*"
		};
	};

	// Delete notice
	rpc DeleteNotice (DeleteNoticeRequest) returns (DeleteNoticeResponse) {
		option (google.api.http) = {
			post: "/admin/notice/delete"
			body: "*"
		};
	};
}

message GetNoticeListRequest {
	int32 page = 1;
	int32 page_size = 2;
}

message GetNoticeListResponse {
	int32 code = 1;
	string message = 2;

	repeated NoticeProto list = 3;
	uint32 total = 4;
}

message GetNoticeByIdRequest {
	int64 id = 1;
}

message GetNoticeByIdResponse {
	int32 code = 1;
	string message = 2;

	NoticeProto item = 3;
}

message CreateNoticeRequest {
	NoticeProto item = 1;
}

message CreateNoticeResponse {
	int32 code = 1;
	string message = 2;
}


message UpdateNoticeRequest {
	NoticeProto item = 1;
}

message UpdateNoticeResponse {
	int32 code = 1;
	string message = 2;
}


message DeleteNoticeRequest {
	int64 id = 1;
}

message DeleteNoticeResponse {
	int32 code = 1;
	string message = 2;
}


message NoticeProto {
	int64 id = 1;
	string title = 2; // Title
	string content = 3; // Content
	int64 sort = 4; // Sort, the larger the number, the higher the position
	int64 start_time = 5; // Start display time
	int64 end_time = 6; // End display time
	int64 created_time = 7; // Create time
	int64 updated_time = 8; // Update time
}
